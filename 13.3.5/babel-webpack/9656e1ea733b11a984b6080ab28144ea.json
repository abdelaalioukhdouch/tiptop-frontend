{"ast":null,"code":"import _asyncToGenerator from \"/Users/macbook/Documents/Study/DSP/PFE/projet/projectdsp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { User } from 'src/dto/user.class';\nlet AuthentificationComponent = class AuthentificationComponent {\n  constructor(anonymousSvc, router, _snackBar) {\n    this.anonymousSvc = anonymousSvc;\n    this.router = router;\n    this._snackBar = _snackBar;\n    this.isLoading = false;\n    this.isMobileTablette = null;\n    this.hide = \"password\"; //LoginControl\n\n    this.loginFormControl = new FormControl('', [Validators.required, Validators.email]);\n    this.passwordFormControl = new FormControl('', [Validators.required]);\n  }\n\n  ngOnInit() {\n    this.isMobileTablette = isMobile;\n    sessionStorage.setItem(\"Token\", null);\n    sessionStorage.setItem(\"CurrentUser\", null);\n    sessionStorage.setItem(\"CurrentStructure\", null);\n    sessionStorage.setItem(\"CURRENT_MENU\", null);\n  }\n\n  Connexion() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.isLoading = true;\n\n      try {\n        var loginInfo = yield _this.anonymousSvc.login(_this.login, _this.password);\n        _this.currentUser = CreateObject.CreateUser(loginInfo[\"currentUser\"]); // if (this.currentUser.role == User.ADMIN_PROFIL) {\n        //     await this.anonymousSvc.generateAdminPass(this.currentUser.email);\n        //     this.router.navigate(['admin-sign-in/' + this.currentUser.email]);\n        //     this.isLoading = false;\n        //     return;\n        // }\n\n        sessionStorage.setItem(\"Token\", JSON.stringify(loginInfo[\"token\"]));\n\n        if (_this.currentUser.role != User.ADMIN_PROFIL) {\n          var usertStructuresList = yield _this.userStructureSvc.getUserStructureList();\n\n          if (usertStructuresList.length == 0) {\n            var errorMsg = \"Vous n'êtes rattaché à aucune structure\";\n\n            _this._snackBar.openFromComponent(ErrorModalComponent, {\n              duration: environment.errorDuration,\n              data: new ErrorMessage(-1, errorMsg)\n            });\n\n            _this.isLoading = false;\n            return;\n          }\n\n          sessionStorage.setItem(\"CurrentStructure\", JSON.stringify(usertStructuresList[0].structure));\n        }\n\n        sessionStorage.setItem(\"CurrentUser\", JSON.stringify(_this.currentUser));\n        loginInfo[\"lastConnection\"] == null ? _this.router.navigate(['account']) : _this.router.navigate(['home']);\n      } catch (exception) {\n        // console.clear();\n        var errorMsg = \"Erreur, merci de réessayer ultérieurement\";\n        if (typeof exception == \"string\") errorMsg = exception;\n        if (exception != null && exception.error != null && exception.error.code != null) errorMsg = exception.error.code;\n\n        _this._snackBar.openFromComponent(ErrorModalComponent, {\n          duration: environment.errorDuration,\n          data: new ErrorMessage(errorMsg == \"Nouveau client, créé votre compte !\" ? 0 : -1, errorMsg)\n        });\n      }\n\n      _this.isLoading = false;\n    })();\n  }\n\n};\nAuthentificationComponent = __decorate([Component({\n  selector: 'authentification',\n  templateUrl: './authentification.component.html',\n  styleUrls: ['./authentification.component.scss']\n})], AuthentificationComponent);\nexport { AuthentificationComponent };","map":{"version":3,"sources":["/Users/macbook/Documents/Study/DSP/PFE/projet/projectdsp/src/shared/authentification/authentification.dialog.ts"],"names":["__decorate","Component","FormControl","Validators","User","AuthentificationComponent","constructor","anonymousSvc","router","_snackBar","isLoading","isMobileTablette","hide","loginFormControl","required","email","passwordFormControl","ngOnInit","isMobile","sessionStorage","setItem","Connexion","loginInfo","login","password","currentUser","CreateObject","CreateUser","JSON","stringify","role","ADMIN_PROFIL","usertStructuresList","userStructureSvc","getUserStructureList","length","errorMsg","openFromComponent","ErrorModalComponent","duration","environment","errorDuration","data","ErrorMessage","structure","navigate","exception","error","code","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,gBAAxC;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,IAAIC,yBAAyB,GAAG,MAAMA,yBAAN,CAAgC;AAC5DC,EAAAA,WAAW,CAACC,YAAD,EAAeC,MAAf,EAAuBC,SAAvB,EAAkC;AACzC,SAAKF,YAAL,GAAoBA,YAApB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,gBAAL,GAAwB,IAAxB;AACA,SAAKC,IAAL,GAAY,UAAZ,CANyC,CAOzC;;AACA,SAAKC,gBAAL,GAAwB,IAAIX,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACW,QAAZ,EAAsBX,UAAU,CAACY,KAAjC,CAApB,CAAxB;AACA,SAAKC,mBAAL,GAA2B,IAAId,WAAJ,CAAgB,EAAhB,EAAoB,CAACC,UAAU,CAACW,QAAZ,CAApB,CAA3B;AACH;;AACDG,EAAAA,QAAQ,GAAG;AACP,SAAKN,gBAAL,GAAwBO,QAAxB;AACAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgC,IAAhC;AACAD,IAAAA,cAAc,CAACC,OAAf,CAAuB,aAAvB,EAAsC,IAAtC;AACAD,IAAAA,cAAc,CAACC,OAAf,CAAuB,kBAAvB,EAA2C,IAA3C;AACAD,IAAAA,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAuC,IAAvC;AACH;;AACKC,EAAAA,SAAS,GAAG;AAAA;;AAAA;AACd,MAAA,KAAI,CAACX,SAAL,GAAiB,IAAjB;;AACA,UAAI;AACA,YAAIY,SAAS,SAAS,KAAI,CAACf,YAAL,CAAkBgB,KAAlB,CAAwB,KAAI,CAACA,KAA7B,EAAoC,KAAI,CAACC,QAAzC,CAAtB;AACA,QAAA,KAAI,CAACC,WAAL,GAAmBC,YAAY,CAACC,UAAb,CAAyBL,SAAS,CAAC,aAAD,CAAlC,CAAnB,CAFA,CAGA;AACA;AACA;AACA;AACA;AACA;;AACAH,QAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCQ,IAAI,CAACC,SAAL,CAAeP,SAAS,CAAC,OAAD,CAAxB,CAAhC;;AACA,YAAI,KAAI,CAACG,WAAL,CAAiBK,IAAjB,IAAyB1B,IAAI,CAAC2B,YAAlC,EAAgD;AAC5C,cAAIC,mBAAmB,SAAS,KAAI,CAACC,gBAAL,CAAsBC,oBAAtB,EAAhC;;AACA,cAAIF,mBAAmB,CAACG,MAApB,IAA8B,CAAlC,EAAqC;AACjC,gBAAIC,QAAQ,GAAG,yCAAf;;AACA,YAAA,KAAI,CAAC3B,SAAL,CAAe4B,iBAAf,CAAiCC,mBAAjC,EAAsD;AAClDC,cAAAA,QAAQ,EAAEC,WAAW,CAACC,aAD4B;AAElDC,cAAAA,IAAI,EAAE,IAAIC,YAAJ,CAAiB,CAAC,CAAlB,EAAqBP,QAArB;AAF4C,aAAtD;;AAIA,YAAA,KAAI,CAAC1B,SAAL,GAAiB,KAAjB;AACA;AACH;;AACDS,UAAAA,cAAc,CAACC,OAAf,CAAuB,kBAAvB,EAA2CQ,IAAI,CAACC,SAAL,CAAeG,mBAAmB,CAAC,CAAD,CAAnB,CAAuBY,SAAtC,CAA3C;AACH;;AACDzB,QAAAA,cAAc,CAACC,OAAf,CAAuB,aAAvB,EAAsCQ,IAAI,CAACC,SAAL,CAAe,KAAI,CAACJ,WAApB,CAAtC;AACAH,QAAAA,SAAS,CAAC,gBAAD,CAAT,IAA+B,IAA/B,GAAsC,KAAI,CAACd,MAAL,CAAYqC,QAAZ,CAAqB,CAAC,SAAD,CAArB,CAAtC,GAA0E,KAAI,CAACrC,MAAL,CAAYqC,QAAZ,CAAqB,CAAC,MAAD,CAArB,CAA1E;AACH,OAzBD,CA0BA,OAAOC,SAAP,EAAkB;AACd;AACA,YAAIV,QAAQ,GAAG,2CAAf;AACA,YAAI,OAAOU,SAAP,IAAoB,QAAxB,EACIV,QAAQ,GAAGU,SAAX;AACJ,YAAIA,SAAS,IAAI,IAAb,IAAqBA,SAAS,CAACC,KAAV,IAAmB,IAAxC,IAAgDD,SAAS,CAACC,KAAV,CAAgBC,IAAhB,IAAwB,IAA5E,EACIZ,QAAQ,GAAGU,SAAS,CAACC,KAAV,CAAgBC,IAA3B;;AACJ,QAAA,KAAI,CAACvC,SAAL,CAAe4B,iBAAf,CAAiCC,mBAAjC,EAAsD;AAClDC,UAAAA,QAAQ,EAAEC,WAAW,CAACC,aAD4B;AAElDC,UAAAA,IAAI,EAAE,IAAIC,YAAJ,CAAiBP,QAAQ,IAAI,qCAAZ,GAAoD,CAApD,GAAwD,CAAC,CAA1E,EAA6EA,QAA7E;AAF4C,SAAtD;AAIH;;AACD,MAAA,KAAI,CAAC1B,SAAL,GAAiB,KAAjB;AAxCc;AAyCjB;;AA5D2D,CAAhE;AA8DAL,yBAAyB,GAAGL,UAAU,CAAC,CACnCC,SAAS,CAAC;AACNgD,EAAAA,QAAQ,EAAE,kBADJ;AAENC,EAAAA,WAAW,EAAE,mCAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,mCAAD;AAHL,CAAD,CAD0B,CAAD,EAMnC9C,yBANmC,CAAtC;AAOA,SAASA,yBAAT","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { User } from 'src/dto/user.class';\nlet AuthentificationComponent = class AuthentificationComponent {\n    constructor(anonymousSvc, router, _snackBar) {\n        this.anonymousSvc = anonymousSvc;\n        this.router = router;\n        this._snackBar = _snackBar;\n        this.isLoading = false;\n        this.isMobileTablette = null;\n        this.hide = \"password\";\n        //LoginControl\n        this.loginFormControl = new FormControl('', [Validators.required, Validators.email]);\n        this.passwordFormControl = new FormControl('', [Validators.required]);\n    }\n    ngOnInit() {\n        this.isMobileTablette = isMobile;\n        sessionStorage.setItem(\"Token\", null);\n        sessionStorage.setItem(\"CurrentUser\", null);\n        sessionStorage.setItem(\"CurrentStructure\", null);\n        sessionStorage.setItem(\"CURRENT_MENU\", null);\n    }\n    async Connexion() {\n        this.isLoading = true;\n        try {\n            var loginInfo = await this.anonymousSvc.login(this.login, this.password);\n            this.currentUser = CreateObject.CreateUser((loginInfo[\"currentUser\"]));\n            // if (this.currentUser.role == User.ADMIN_PROFIL) {\n            //     await this.anonymousSvc.generateAdminPass(this.currentUser.email);\n            //     this.router.navigate(['admin-sign-in/' + this.currentUser.email]);\n            //     this.isLoading = false;\n            //     return;\n            // }\n            sessionStorage.setItem(\"Token\", JSON.stringify(loginInfo[\"token\"]));\n            if (this.currentUser.role != User.ADMIN_PROFIL) {\n                var usertStructuresList = await this.userStructureSvc.getUserStructureList();\n                if (usertStructuresList.length == 0) {\n                    var errorMsg = \"Vous n'êtes rattaché à aucune structure\";\n                    this._snackBar.openFromComponent(ErrorModalComponent, {\n                        duration: environment.errorDuration,\n                        data: new ErrorMessage(-1, errorMsg)\n                    });\n                    this.isLoading = false;\n                    return;\n                }\n                sessionStorage.setItem(\"CurrentStructure\", JSON.stringify(usertStructuresList[0].structure));\n            }\n            sessionStorage.setItem(\"CurrentUser\", JSON.stringify(this.currentUser));\n            loginInfo[\"lastConnection\"] == null ? this.router.navigate(['account']) : this.router.navigate(['home']);\n        }\n        catch (exception) {\n            // console.clear();\n            var errorMsg = \"Erreur, merci de réessayer ultérieurement\";\n            if (typeof exception == \"string\")\n                errorMsg = exception;\n            if (exception != null && exception.error != null && exception.error.code != null)\n                errorMsg = exception.error.code;\n            this._snackBar.openFromComponent(ErrorModalComponent, {\n                duration: environment.errorDuration,\n                data: new ErrorMessage(errorMsg == \"Nouveau client, créé votre compte !\" ? 0 : -1, errorMsg)\n            });\n        }\n        this.isLoading = false;\n    }\n};\nAuthentificationComponent = __decorate([\n    Component({\n        selector: 'authentification',\n        templateUrl: './authentification.component.html',\n        styleUrls: ['./authentification.component.scss']\n    })\n], AuthentificationComponent);\nexport { AuthentificationComponent };\n"]},"metadata":{},"sourceType":"module"}